#!/usr/bin/env make

NAME = slo_generator
RYE = rye
VERSION ?= $(shell grep "version = " pyproject.toml | cut -d ' ' -f 3)

all: clean install test

info:
	@echo "slo-generator v${VERSION}"

clean:
	@echo "Cleaning up distutils stuff"
	rm -rf build
	rm -rf dist
	rm -rf MANIFEST
	rm -rf *.egg-info

	@echo "Cleaning up byte compiled python stuff"
	find . -type f -regex ".*\.py[co]$$" -delete

	@echo "Cleaning up doc builds"
	rm -rf docs/_build
	rm -rf docs/api_modules
	rm -rf docs/client_modules

	@echo "Cleaning up test reports"
	rm -rf report/*
	rm -f .coverage

# Update lockfiles and virtual environment.
# IMPORTANT: Do not use `--no-lock`, as different versions of Python (for example in CI,
# with matrix strategies) might require different packages and/or package versions.
# Reference: https://rye-up.com/guide/sync/
install: clean
	$(RYE) sync --all-features

# Install tools and utilities for the inner loop on the development machine.
# For example `pre-commit`, configured from `pre-commit-config.yaml`.
develop: install
	$(RYE) run pre-commit install

format:
	$(RYE) fmt

test: install unit lint audit

unit: clean
	$(RYE) run pytest

lint: ruff pytype mypy

ruff:
	$(RYE) run ruff check
	$(RYE) run ruff format

pytype:
	$(RYE) run pytype

mypy:
	$(RYE) run mypy --show-error-codes src/$(NAME)

audit: bandit safety

bandit:
	$(RYE) run bandit -c pyproject.toml -r src/$(NAME)

safety:
# Ignore CVE-2018-20225 with Vulnerability ID 67599.
# We do not use the `--extra-index-url` option, and the behavior is intended anyway.
	$(RYE) run safety check --ignore 67599

integration: int_cm int_csm int_custom int_dd int_dt int_es int_prom int_sp int_os

int_cm:
	slo-generator compute -f samples/cloud_monitoring -c samples/config.yaml

int_csm:
	slo-generator compute -f samples/cloud_service_monitoring -c samples/config.yaml

int_custom:
	slo-generator compute -f samples/custom -c samples/config.yaml

int_dd:
	slo-generator compute -f samples/datadog -c samples/config.yaml

int_dt:
	slo-generator compute -f samples/dynatrace -c samples/config.yaml

int_es:
	slo-generator compute -f samples/elasticsearch -c samples/config.yaml

int_prom:
	slo-generator compute -f samples/prometheus -c samples/config.yaml

int_sp:
	slo-generator compute -f samples/splunk -c samples/config.yaml

int_os:
	slo-generator compute -f samples/opensearch -c samples/config.yaml

# Run API locally
run_api:
	slo-generator api --target=run_compute --signature-type=http -c samples/config.yaml

# Build both the sdist and wheel targets in the `dist` directory.
build: clean
	$(RYE) build

deploy: clean build
	$(RYE) publish

# Build Docker image locally
docker_build:
	docker build \
		--tag slo-generator:latest \
		--build-arg PYTHON_VERSION=$(shell cat .python-version) \
		.

# Build Docker image with Cloud Build
# FIXME How to reuse the local approach in Cloud Build, with the bind mount on `dist` and the wheel generated by `rye build`?
# If a simple solution is not available, use a multi-stage build to build the wheel first?
cloud_build:
	gcloud builds submit \
		--config=cloudbuild.yaml \
		--project=${CLOUDBUILD_PROJECT_ID} \
		--substitutions=_GCR_PROJECT_ID=${GCR_PROJECT_ID},_VERSION=${VERSION},_PYTHON_VERSION=${PYTHON_VERSION}

# Cloud Run
# FIXME Remove `--allow-unauthenticated` to reduce the attack surface of the CI environment.
cloud_run:
	gcloud run deploy slo-generator \
		--image=gcr.io/${GCR_PROJECT_ID}/slo-generator:${VERSION} \
		--region=${REGION} \
		--platform=managed \
		--set-env-vars=CONFIG_PATH=${CONFIG_URL} \
		--service-account=${SERVICE_ACCOUNT} \
		--project=${CLOUDRUN_PROJECT_ID} \
		--command="slo-generator" \
		--args=api \
		--args=--signature-type="${SIGNATURE_TYPE}" \
		--min-instances=1 \
		--allow-unauthenticated

# Cloud Run - Export Mode Only
# FIXME Remove `--allow-unauthenticated` to reduce CI attack surface.
cloud_run_export_only:
	gcloud run deploy slo-generator-export \
		--image=gcr.io/${GCR_PROJECT_ID}/slo-generator:${VERSION} \
		--region=${REGION} \
		--platform=managed \
		--set-env-vars=CONFIG_PATH=${CONFIG_URL} \
		--service-account=${SERVICE_ACCOUNT} \
		--project=${CLOUDRUN_PROJECT_ID} \
		--command="slo-generator" \
		--args=api \
		--args=--signature-type="cloudevent" \
		--args=--target="run_export" \
		--min-instances=1 \
		--allow-unauthenticated
